.............Multiple Conditional Rendering...........
import { useState } from 'react'
import Contact from './Components/Contact.jsx'
import Greet from './Components/Greet.jsx'
import User from './Components/User.jsx'
import Wrapper from './Components/Wrapper.jsx'
import Counter from './Components/Counter.jsx'
import Newuser from './Components/Newuser.jsx'

function App() {
 let[count, setCount] = useState(0)
 function Counting(ct){
  if(ct==0){
    return <h1>Diplay 0</h1>
  }
  else if(ct==1){
    return <h1>Display 1</h1>
  }
   else if(ct==2){
    return <h1>Display 2</h1>
  }
   else if(ct==3){
    return <h1>Display 3</h1>
  }
   else if(ct==4){
    return <h1>Display 4</h1>
  }
  else{
    return <h1>Large value</h1>
  }
 }
  return (

      <>
      
      <button onClick={()=>{setCount(++count)}}>Update</button>
      <h1>Count: {count}</h1>

      {
        // count==0? <h2>Display 0</h2>
        // :count==1?<h1>Display 1</h1>
        // :count==2?<h1>Display 2</h1>
        // :count==3?<h1>Display 3</h1>
        // :count==4?<h1>Display 4</h1>
        // :count==5?<h1>Display 5</h1>
        // :count==6?<h1>Display 6</h1>
        // :count==7?<h1>Display 7</h1>
        // :count==8?<h1>Display 8</h1>
        // :count==9?<h1>Display 9</h1>:<h2>Large value</h2>
        Counting(count)
      }

...........Handling Inputs with useState Hook...............

      
function App() {
 
  let [val, setVal] = useState("");
  let [pass, setPass] = useState("");


  return (

      <>
      <h1>{val}</h1>
      <h1>{pass}</h1>

        <input type="text" value={val}  placeholder='Enter Username'
        onChange={(event)=>{setVal(event.target.value)}}/>
        <br /><br />
         <input type="password" value={pass}  placeholder='Enter Password'
        onChange={(event)=>{setPass(event.target.value)}}/>
        <br /><br />




        <button onClick={()=>{setVal(""); setPass("")}}>Clear Value</button>
     


      </>
  )
}

export default App


..........Handling checkboxes with useState Hook.............


function App() {
  let[skill, setSkill] = useState([])

  let getSkill = (event)=>{
      // console.log(event.target.value, event.target.checked)
      if(event.target.checked){
        setSkill([...skill, event.target.value])
      }
      else{
        setSkill([...skill.filter((item)=>item != event.target.value)])
      }
  }

  return (

      <>
      <label htmlFor="html">HTML</label>
      <input type="checkbox" value= "HTML" onChange={getSkill}  id="html" />
        <br /> <br />
       <label htmlFor="css">CSS</label>
      <input type="checkbox" value= "CSS"  onChange={getSkill} id="css" />
 <br /> <br />
       <label htmlFor="js">Js</label>
      <input type="checkbox" value= "Js"  onChange={getSkill} id="js" />
 <br /> <br />
       <label htmlFor="react">React</label>
      <input type="checkbox" value= "React"  onChange={getSkill}  id="react" />

      <h1>{skill}</h1>
      </>
  )
}

export default App



...................Lists using Loops.......................

import Contact from './Components/Contact.jsx'
import Greet from './Components/Greet.jsx'
import User from './Components/User.jsx'
import Wrapper from './Components/Wrapper.jsx'
import Counter from './Components/Counter.jsx'
import Newuser from './Components/Newuser.jsx'

function App() {
  let skills = ['html', 'css', 'js', 'Node']

  return (

      <>
     <h1>Skills:</h1>
      {
        skills.map((item, index)=>(
        <h3>Skill: <span style={{color: "orange"}}>{item}</span> at Index: {index}</h3>

        ))
      }


     
      </>
  )
}

export default App




import { useState } from 'react'
import Contact from './Components/Contact.jsx'
import Greet from './Components/Greet.jsx'
import User from './Components/User.jsx'
import Wrapper from './Components/Wrapper.jsx'
import Counter from './Components/Counter.jsx'
import Newuser from './Components/Newuser.jsx'

function App() {

  let userInfo = [
    ["Name", "Id", "Age"],
    {
      name: "Safal",
      id: 1,
      email: "safal@test.com"
    },
    {
      name: "Samar",
      id: 2,
      email: "samar@test.com"
    },
    {
      name: "Suyes",
      id: 3,
      email: "suyes@test.com"
    },
    {
      name: "Usha",
      id: 4,
      email: "usha@test.com"
    }
  ]

  return (

      <>

      <table border={1}>
        <thead>
          <tr>
            <th>{userInfo[0][0]}</th>
            <th>{userInfo[0][1]}</th>
            <th>{userInfo[0][2]}</th>
          </tr>
        </thead>
        <tbody>
          {
            userInfo.map((item)=>(
              <tr key={item.id}>
                <td>{item.name}</td>   
                <td>{item.id}</td>
                <td>{item.email}</td>
              </tr>
            ))
          }
        </tbody>
      </table>





      ...........Component Lifecycle............

      import { useEffect, useState } from 'react'
import Contact from './Components/Contact.jsx'
import Greet from './Components/Greet.jsx'
import User from './Components/User.jsx'
import Wrapper from './Components/Wrapper.jsx'
import Counter from './Components/Counter.jsx'
import Newuser from './Components/Newuser.jsx'
import Effect from './Effect.jsx'

function App() {

  let[count, setCount] = useState(0)
  let[data, setData] = useState(0)
  const[display, setDisplay] = useState(true)

 
  

  return (

      <>
      {
        display?<Effect count = {count} data = {data}/>:null
      }


        <button onClick={()=>setCount(count+1)}>Counter: {count}</button>
<br /><br />
        <button onClick={()=>setData(data+1)}>Data: {data}</button>

        <button onClick={()=>setDisplay(!display)}>Toggle</button>

     
      </>
  )
}

export default App


..............useRef.............
import { useEffect, useRef, useState } from 'react'


function App() {

  const userRef = useRef();
  const passRef = useRef();

  let handleRef = (event)=>{
      event.preventDefault();
      // console.log("something")
      let user = userRef.current.value
      let pass = passRef.current.value
      console.log("User: " + user + " and Password: " + pass)
  }



 let formInput =(event)=>{
    event.preventDefault();
    // console.log(event);
    let user = document.querySelector("#user").value
    console.log("User: ", user);
    let pass = document.querySelector("#pass").value
    console.log("Password: ", pass);
    
    
 }


  return (

      <>
      
     <form action="" onSubmit={formInput}>

      <input type="text" name="" id="user" placeholder='Enter Username' />
      <br /><br />
      <input type="password" id='pass' placeholder='Enter pasword' />
      <br /><br />
      <button>Submit</button>
      
</form>
<br />

<hr />
<br />
 <form action="" onSubmit={handleRef}>

      <input type="text" ref={userRef} name="" placeholder='Enter Username' />
      <br /><br />
      <input type="password" ref={passRef} placeholder='Enter pasword' />
      <br /><br />
      <button>Submit</button>
      
</form>

     
      </>
  )
}

export default App


..........Context API.........
import { useEffect, useRef, useState } from 'react'
import University from './University'
import { courseContext } from './DataContext'


function App() {
let[course, setCourse] = useState("");


  return (

      <div style={{backgroundColor: "orange", border: "2px solid black", padding: "10PX"}}>

       <courseContext.Provider value= {course}>
        <select value={course} onChange={(event)=>setCourse(event.target.value)}>
          <option value="">Select an Option</option>
          
          <option value="DBMS">DBMS</option>
          <option value="Cloud Computing">Cloud Computing</option>
          <option value="Software Engineering">software Engineering</option>
          <option value="Operating System">Operating System</option>
          
          </select> 
          <button onClick={()=>setCourse("")}>Clear</button>
                  
         <h1>Context API</h1>
        <University/>

       </courseContext.Provider>

     
      </div>
  )
}

export default App


.............Lazy Loading..........
import { Suspense, lazy, useEffect, useRef, useState } from 'react'
import University from './University'
import { courseContext } from './DataContext'
// import Customers from './Customers'
let C = lazy(()=>import('./Customers'))


function App() {
let[load, setLoad] =useState(false);


  return (

      <div >
    {/* {
      load?<Customers/>:null
    } */}

      {
        load? <Suspense fallback = {<h3>Loading...</h3>}><C/></Suspense>:null
      }


     <button onClick={()=>setLoad(true)}>Load Customer</button>
      </div>
  )
}

export default App


...............useReducer Hook...........
import { useReducer } from "react"

const inpData = {
    name: '',
    password: '',
    email: '',
    city: '',
    address: ''
}

let reducer = (data, action)=>{
      // console.log(data, action)
      return {...data, [action.type]: action.val}
}


function App() {
  let [state, dispatch] = useReducer(reducer, inpData )
  console.log(state)

  return (

      <div >
          <input type="text" onChange={(event)=> dispatch({val: event.target.value, type: 'name'})} placeholder="enter name" />
          <br /><br />
          <input type="text" onChange={(event)=> dispatch({val: event.target.value, type: 'password'})} placeholder="enter password" />
          <br /><br />
          <input type="text" onChange={(event)=> dispatch({val: event.target.value, type: 'email'})} placeholder="enter email" />
          <br /><br />
          <input type="text" onChange={(event)=> dispatch({val: event.target.value, type: 'city'})} placeholder="enter city" />
          <br /><br />
          <input type="text" onChange={(event)=> dispatch({val: event.target.value, type: 'address'})} placeholder="enter address" />
          <br /><br />

          <ul>
            <li>Name: {state.name}</li>
            <li>Password: {state.password} </li>
            <li>Email:{state.email} </li>
            <li>City:{state.city} </li>
            <li>Address:{state.address} </li>
          </ul>
      </div>
  )
}

export default App